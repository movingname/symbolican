#Environment variables common to all the scripts
#
#
#Assumes Xvfb is started as a startup job
#Xvfb screen
DISPLAY=':99' 
#
#Directory structure
#
#Location of all inputs for tests
#All frequent read and write files go to /tmp
#with tmp mounted as tmpfs to minimise EBS I/O count
#for speed and cost
INPUT=/tmp/input
#Location for EXE(s) under test
EXEDIR=/tmp/bin
#Location for test binaries
TESTDIR=/tmp/testbin
#Location for data
SAMPLEDIR=$INPUT/samples
FUZZDIR=$INPUT/fuzzed
#Test input files
SAMPLEHTML=$INPUT/samples.html
#
#Exe under test
#
DRTS3Bucket=chromiumbuilds 	#S3 Bucket Name 
#S3 Object 
DRT32S3Key=DRT.linux.32.rel.latest.tar.gz 	
DRT64S3Key=DRT.linux.64.rel.latest.tar.gz 
EXE=$EXEDIR/DumpRenderTree	#local exe name must match the archived name
#crash file, taken from Chrome defect db
#should be bundled with DumpRenderTree build
CRASH=$EXEDIR/crash.html
#
#Radamsa
#
RADAMSAARCHIVE=radamsa-0.2.3				
RADAMSAURL="http://ouspg.googlecode.com/files"	#and its URL
RADAMSA=$TESTDIR/radamsa-0.2.3				
#
#Samples
#
SAMPLES=PngSuite-2011apr25.tgz
SAMPLESURL="http://www.schaik.com/pngsuite"
#
#Name of the task on AWS Cloudwatch console
NAMESPACE='CloudRun'
TASK='radamsa-0.2.3 png'
#Number of samples to generate with each Radamsa invocation
FUZZCOUNT=200
#file type generated by the fuzzer
FUZZOUT=test-%n.png 
#sample type input for the fuzzer
FUZZIN=*.png
#HTML Page to aggregate the fuzzed file
#Only for non-HTML fuzzed type
FUZZHTML=$FUZZDIR/fuzzed.html





